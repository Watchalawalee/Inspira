import os
import hashlib
import json
from glob import glob

def hash_filename(title):
    return hashlib.md5(title.encode("utf-8")).hexdigest() + ".json"

def process_json_file(file_path):
    try:
        with open(file_path, "r", encoding="utf-8") as f:
            data = json.load(f)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô list ‡∏´‡∏£‡∏∑‡∏≠ dict
        if isinstance(data, list) and len(data) > 0:
            title = data[0].get("title", "")
            for d in data:
                d["original_filename"] = os.path.basename(file_path)
        elif isinstance(data, dict):
            title = data.get("title", "")
            data["original_filename"] = os.path.basename(file_path)
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• title ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå: {file_path}")
            return

        if not title:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ title ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö hash: {file_path}")
            return

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å hash
        new_name = hash_filename(title)
        new_path = os.path.join(os.path.dirname(file_path), new_name)

        # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà)
        with open(new_path, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=2)

        # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô
        if os.path.abspath(new_path) != os.path.abspath(file_path):
            os.remove(file_path)

        print(f"‚úÖ {os.path.basename(file_path)} ‚Üí {new_name}")

    except Exception as e:
        print(f"‚ùå Error processing {file_path}: {e}")

# üîç ‡∏Å‡∏≥‡∏´‡∏ô‡∏î path ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
base_folders = ["./scrapy_project/spiders"]
modes = ["upcoming"]

for base in base_folders:
    for mode in modes:
        target_path = os.path.join(base, "**", "raw_data", mode, "*.json")
        json_files = glob(target_path, recursive=True)

        print(f"\nüìÇ Processing {len(json_files)} files in {mode} mode")

        for file_path in json_files:
            process_json_file(file_path)
